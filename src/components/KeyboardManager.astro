---
import Key from "@/components/Key.astro"
import { basics } from "@cv"

const { profiles } = basics
const profilesInfo = profiles.map(({ network, url }) => {
  return {
    section: "Socials",
    id: network,
    title: `Open ${network}`,
    icon: network.toLowerCase(),
    url
  }
})
---

<footer
  id="footer"
  class="fixed bottom-0 py-1 w-full bg-white border-t border-gray-300 text-gray-600 text-center z-10 dark:bg-gray-800 dark:border-gray-500 dark:text-gray-100 print:hidden"
>
  Press <Key>⌘ / Ctrl</Key> + <Key>K</Key> to open the command palette.
</footer>

<ninja-keys
  hideBreadcrumbs
  class="print:hidden"
  data-profiles-info={JSON.stringify(profilesInfo)}></ninja-keys>

<style>
  @keyframes slideUp {
    from {
      transform: translateY(100%);
    }
    to {
      transform: translateY(0);
    }
  }

  #footer {
    view-timeline-name: --reveal-footer;
    view-timeline-axis: block;
    animation: slideUp 0.25s ease-out;
    animation-timeline: --reveal-footer;
    animation-range: entry 100% cover 20%;
  }
</style>

<script>
  import "ninja-keys"
  const ninja = document.querySelector("ninja-keys")
  const activationKey = navigator.userAgent.includes("Macintosh") ? "⌘" : "Ctrl"

  if (ninja != null) {
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      ninja.classList.add("dark")
    }
    const dataInfo = ninja!.getAttribute("data-profiles-info") ?? "[]"
    const parsedInfo = JSON.parse(dataInfo)
    const profilesInfo = parsedInfo.map((info: any) => {
      return {
        ...info,
        icon: `<img width="24px" style="margin-right: 8px;" src=https://cdn.simpleicons.org/${info.icon}/000/fff" alt="${info.title}" />`,
        hotkey: `${activationKey} + ${info.id[0].toUpperCase()}`,
        handler: () => {
          window.open(info.url, "_blank")
        }
      }
    })

    ninja.data = [
      {
        section: "Actions",
        id: "print",
        title: "Print CV",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px;">
        <path d="M17 17h2a2 2 0 0 0 2 -2v-4a2 2 0 0 0 -2 -2h-14a2 2 0 0 0 -2 2v4a2 2 0 0 0 2 2h2" />
        <path d="M17 9v-4a2 2 0 0 0 -2 -2h-6a2 2 0 0 0 -2 2v4" />
        <path d="M7 13m0 2a2 2 0 0 1 2 -2h6a2 2 0 0 1 2 2v4a2 2 0 0 1 -2 2h-6a2 2 0 0 1 -2 -2z" />
      </svg>
      `,
        hotkey: `${activationKey} + P`,
        handler: () => {
          window.print()
        }
      },
      ...profilesInfo,
      {
        id: "Theme",
        title: "Change Theme",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z" />
          <path d="M7 20h10" />
          <path d="M9 16v4" />
          <path d="M15 16v4" />
        </svg>
        `,
        children: ["Light Theme", "Dark Theme"],
        hotkey: "ctrl+T",
        handler: () => {
          // open menu if closed. Because you can open directly that menu from it's hotkey
          ninja.open({ parent: "Theme" })
          // if menu opened that prevent it from closing on select that action, no need if you don't have child actions
          return { keepOpen: true }
        }
      },
      {
        id: "Light Theme",
        title: "Change theme to Light",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
          <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
        </svg>
        `,
        parent: "Theme",
        handler: () => {
          document.documentElement.classList.remove("dark")
          ninja.classList.remove("dark")
        }
      },
      {
        id: "Dark Theme",
        title: "Change theme to Dark",
        icon: `<svg xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px;" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
        </svg>
        `,
        parent: "Theme",
        handler: () => {
          document.documentElement.classList.add("dark")
          ninja.classList.add("dark")
        }
      }
    ]
  }
</script>
